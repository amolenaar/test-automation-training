# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  #config.vm.box = "npalm/mint17-amd64-cinnamon"
  #config.vm.box = "ubuntu/trusty64"
  config.vm.box = "ubuntu/precise64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  config.vm.network "public_network", bridge: 'en0: Wi-Fi (AirPort)'

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
    # Display the VirtualBox GUI when booting the machine
    vb.gui = false
 
    # Customize the amount of memory on the VM:
    vb.memory = "2048"
  end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-EOF
    set -e
    mkdir -p IdeaProjects
    mkdir -p Desktop
    sudo apt-get update
    sudo apt-get install -y git xrdp tightvncserver xfce4 
    echo xfce4-session > .xsession
    cd /tmp
    echo "Installing Java 8 JDK"
    wget -q --header "Cookie: oraclelicense=accept-securebackup-cookie" http://download.oracle.com/otn-pub/java/jdk/8u91-b14/jdk-8u91-linux-x64.tar.gz
    cd /opt
    sudo tar zxf /tmp/jdk-8u91-linux-x64.tar.gz
    sudo update-alternatives --install "/usr/bin/java" "java" "/opt/jdk1.8.0_91/bin/java" 1
    sudo update-alternatives --set java /opt/jdk1.8.0_91/bin/java
    echo "Java has been installed"
    cd /tmp
    echo "Installing IntelliJ IDEA"
    wget -q https://download.jetbrains.com/idea/ideaIC-2016.1.2b.tar.gz
    cd /opt
    sudo tar zxf /tmp/ideaIC-2016.1.2b.tar.gz
    cp /vagrant/IntelliJ\\ IDEA.desktop /home/vagrant/Desktop/
    echo "IntelliJ IDEA has been installed"
  EOF
end
